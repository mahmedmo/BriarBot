version: '3.8'

services:
  briar-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: briar-bot
    restart: unless-stopped
    
    # Environment variables
    environment:
      - NODE_ENV=production
      - TZ=UTC
      - DEBUG=bot:*
    
    # Environment file (create this with your Discord bot token)
    env_file:
      - .env
    
    # Volume mounts
    volumes:
      - ./cache:/app/cache:rw              # Persistent cache storage
      - ./logs:/app/logs:rw               # Log files
      - /etc/localtime:/etc/localtime:ro   # System timezone
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "process.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Security
    user: "1001:1001"
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    security_opt:
      - no-new-privileges:true
    read_only: false  # Puppeteer needs write access to /tmp
    tmpfs:
      - /tmp:noexec,nosuid,size=200m
    
    # Network
    networks:
      - briar-network
    
    # Logging
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    
    # Labels for organization
    labels:
      - "traefik.enable=false"
      - "com.briarbot.service=discord-bot"
      - "com.briarbot.version=2.0"

  # Optional: Monitoring with lightweight metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: briar-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - briar-network
    profiles:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Optional: Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: briar-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123  # Change this!
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - briar-network
    profiles:
      - monitoring
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'

  # Optional: Redis for advanced caching (if you want to extend caching beyond files)
  redis:
    image: redis:7-alpine
    container_name: briar-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - briar-network
    profiles:
      - caching
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'

# Networks
networks:
  briar-network:
    driver: bridge
    name: briar-network

# Named volumes for data persistence
volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local